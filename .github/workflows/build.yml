name: Build
on:
  workflow_dispatch:
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu" # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner
      - name: SonarQube Begin analysis
        shell: powershell
        run: |
          ${{ runner.temp }}\scanner\dotnet-sonarscanner begin `
            /k:"AsyncEndpoints" `
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.cs.coverageReportPaths="tests/**/TestResults/**/*.cobertura.xml"
      - name: Restore dependencies
        run: dotnet restore AsyncEndpoints.sln
      - name: Build the solution
        run: dotnet build AsyncEndpoints.sln --configuration Release --no-restore
      - name: Run unit tests with coverage
        shell: powershell
        run: |
          dotnet test AsyncEndpoints.sln --collect "XPlat Code Coverage" --configuration Release --no-build --framework net8.0
      - name: SonarQube End analysis
        shell: powershell
        run: |
          ${{ runner.temp }}\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
